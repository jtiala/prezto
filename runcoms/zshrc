#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

#
# aliases
#

# Default fasd alias for z
alias z='fasd_cd -d'

# Pull git repos in all subdirectories
alias multipull="find . -mindepth 1 -maxdepth 1 -type d -print -exec git -C {} status -bs \; -exec git -C {} pull \; -exec echo \;"

# Pull git repos in all subdirectories
alias multisweep="find . -mindepth 1 -maxdepth 1 -type d -print -exec git -C {} sweep \; -exec echo \;"

#
# direnv
#

# Load direnv
if type direnv >/dev/null; then
  eval "$(direnv hook zsh)"
fi

#
# jenv
#

# Try to find jenv, if it's not on the path
export JENV_ROOT="${JENV_ROOT:=${HOME}/.jenv}"
if ! type jenv >/dev/null && [ -f "${JENV_ROOT}/bin/jenv" ]; then
  export PATH="${JENV_ROOT}/bin:${PATH}"
fi
# Lazy load jenv
if type jenv >/dev/null; then
  export PATH="${JENV_ROOT}/bin:${JENV_ROOT}/shims:${PATH}"
  function jenv() {
    unset -f jenv
    eval "$(command jenv init -)"
    jenv $@
  }
fi

#
# pyenv
#

# Try to find pyenv, if it's not on the path
export PYENV_ROOT="${PYENV_ROOT:=${HOME}/.pyenv}"
if ! type pyenv >/dev/null && [ -f "${PYENV_ROOT}/bin/pyenv" ]; then
  export PATH="${PYENV_ROOT}/bin:${PATH}"
fi

# Lazy load pyenv and pyenv-virtualenv-init
if type pyenv >/dev/null; then
  export PATH="${PYENV_ROOT}/bin:${PYENV_ROOT}/shims:${PATH}"
  function pyenv() {
    unset -f pyenv
    eval "$(command pyenv init -)"
    if type pyenv-virtualenv-init >/dev/null; then
      eval "$(command pyenv virtualenv-init -)"
    fi
    pyenv $@
  }
fi

#
# rbenv
#

# Try to find rbenv, if it's not on the path
export RBENV_ROOT="${RBENV_ROOT:=${HOME}/.rbenv}"
if ! type rbenv >/dev/null && [ -f "${RBENV_ROOT}/bin/rbenv" ]; then
  export PATH="${RBENV_ROOT}/bin:${PATH}"
fi

# Lazy load rbenv
if type rbenv >/dev/null; then
  export PATH="${RBENV_ROOT}/bin:${RBENV_ROOT}/shims:${PATH}"
  function rbenv() {
    unset -f rbenv
    eval "$(command rbenv init -)"
    rbenv $@
  }
fi
